# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies, and  run linters
name: Rails - Install dependencies and run linters

on: [push]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1

      - name: Solr - Create container
        run: docker run --platform linux/amd64 -d -p 8983:8983 ewlarson/umedia-solr:7.3-v1.0.1 server/scripts/ci-start.sh

      - name: Rails - Bundle install
        env:
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle lock --add-platform x86_64-linux
          bundle install --jobs 4 --retry 3

      - name: Solr - Load config
        run: |
          cd solr/conf
          zip -1 -r solr_config.zip ./*
          curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@127.0.0.1:8983/solr/admin/configs?action=UPLOAD&name=core"
          curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8983/api/collections/  -d '{create: {name: core, config: core, numShards: 1}}'

      - name: Solr - Restore snapshot
        env:
          RAILS_ENV: test
          UMEDIA_NAILER_CDN_URI: ${{ secrets.UMEDIA_NAILER_CDN_URI }}
          SOLR_URL=http://solr:SolrRocks@localhost:8983/solr/core
        run: |
          bundle exec rake solr:restore

      # - name: NPM - Install Canvas
      #  run: |
      #    sudo apt-get install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      #    npm install canvas

      # - name: Rails - Yarn install
      #  env:
      #    RAILS_ENV: test
      #  run: |
      #    yarn install

      # - name: Rails - Precompile Assets
      #  env:
      #    RAILS_ENV: test
      #  run: |
      #    bundle exec rails assets:precompile

      # - name: Run tests
      #  env:
      #    RAILS_ENV: test
      #  run: |
      #    bundle exec rails db:schema:load
      #    bin/rails db:migrate RAILS_ENV=test

      - name: Tests - Run tests
        env:
          RAILS_ENV: test
          RUBYOPT: W0
          UMEDIA_NAILER_CDN_URI: ${{ secrets.UMEDIA_NAILER_CDN_URI }}
        run: |
          bundle exec rails test

      # Add or Replace any other security checks here
      - name: Run security checks
        run: |
          bin/bundler-audit --update
          bin/brakeman -q -w2

      # Add or Replace any other Linters here
      - name: Run linters
        run: |
          bin/rubocop --parallel
